<iscontent type="text/javascript" charset="UTF-8" compact="true"/>

<isscript>
	importPackage( dw.system );
	importPackage( dw.catalog );
	importPackage( dw.util );
	importPackage( dw.value );
	importPackage( dw.web );
	
	function isMobile() {
		var mobileAgentHash = ["mobile","tablet","phone","ipad","ipod","android","blackberry","windows ce","opera mini","palm"],
			idx = 0,
			item = null,
			isMobile : Boolean = false,
			userAgent : String = request.httpUserAgent.toLowerCase();
				
		while (item = mobileAgentHash[idx++] && !isMobile) {
			isMobile = (userAgent.indexOf(mobileAgentHash[idx]) >= 0);
		}
		return isMobile;
	}
	
	
	// application constants
	var constants = {	
		AVAIL_STATUS_IN_STOCK 		: ProductAvailabilityModel.AVAILABILITY_STATUS_IN_STOCK,
		AVAIL_STATUS_PREORDER 		: ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER,
		AVAIL_STATUS_BACKORDER 		: ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER,
		AVAIL_STATUS_NOT_AVAILABLE 	: ProductAvailabilityModel.AVAILABILITY_STATUS_NOT_AVAILABLE,
		PI_METHOD_GIFT_CERTIFICATE	: dw.order.PaymentInstrument.METHOD_GIFT_CERTIFICATE
	};
	
	// application resources
	var resources =  {
			
		SHIP_QualifiesFor 				: Resource.msg('shipment.qualifiesfor','checkout',null),		
		CC_LOAD_ERROR 					: Resource.msg('billing.creditcardloaderror','checkout',null),				
	
		// Registry resources
		REG_ADDR_ERROR 					: Resource.msg('global.couldntloadaddress','locale',null),
		
		// bonus products messages
		BONUS_PRODUCT 					: Resource.msg('product.bonusproduct','product',null),
		BONUS_PRODUCTS 					: Resource.msg('product.bonusproducts','product',null),
		SELECT_BONUS_PRODUCTS 			: Resource.msg('product.selectbonusproducts','product',null),
		SELECT_BONUS_PRODUCT 			: Resource.msg('product.selectbonusproduct','product',null),
		BONUS_PRODUCT_MAX 				: Resource.msg('product.bonusproductsmax','product',null),
		SIMPLE_SEARCH 					: Resource.msg('simplesearch.searchtext','search', null),
		SUBSCRIBE_EMAIL_DEFAULT			: Resource.msg('forms.subscribe.email.default','forms', 'Email Address'),
				
		CURRENCY_SYMBOL					: Currency.getCurrency(dw.system.Site.current.currencyCode).symbol,
		MISSINGVAL						: Resource.msg('global.missingval','locale',null),
		SERVER_ERROR 					: Resource.msg('global.servererror','locale',null),
		MISSING_LIB 					: Resource.msg('global.missinglib','locale',null),
		BAD_RESPONSE					: Resource.msg('global.badresponse','locale',null),
		INVALID_PHONE					: Resource.msg('global.invalidphone','locale',null),
		INVALID_EMAIL					: Resource.msg('profile.emailparseerror','forms',null),
		REMOVE							: Resource.msg('global.remove','locale',null),
		QTY								: Resource.msg('global.qty','locale',null),
		EMPTY_IMG_ALT					: Resource.msg('global.remove', 'locale', null),
		COMPARE_BUTTON_LABEL			: Resource.msg('productcomparewidget.compareitemsbutton', 'search', null),
		COMPARE_CONFIRMATION			: Resource.msg('productcomparewidget.maxproducts', 'search', null),
		COMPARE_REMOVE_FAIL				: Resource.msg('productcomparewidget.removefail', 'search', null),
		COMPARE_ADD_FAIL				: Resource.msg('productcomparewidget.addfail', 'search', null),
		ADD_TO_CART_FAIL				: Resource.msg('cart.unableToAdd', 'checkout', null),	
		REGISTRY_SEARCH_ADVANCED_CLOSE	: Resource.msg('giftregistry.closeadvanced', 'account', null),
					
		GIFT_CERT_INVALID				: Resource.msg('billing.giftcertinvalid', 'checkout', null),
		GIFT_CERT_BALANCE				: Resource.msg('billing.giftcertbalance', 'checkout', null),
		GIFT_CERT_AMOUNT_INVALID		: Resource.msg('giftcert.amountvalueerror', 'forms', null),
		GIFT_CERT_MISSING				: Resource.msg('billing.giftcertidmissing', 'checkout', null),
		
		COUPON_CODE_MISSING				: Resource.msg('cart.COUPON_CODE_MISSING','checkout', null),
		
		COOKIES_DISABLED				: Resource.msg('browsertoolscheck.cookies','components',null),
		BML_AGREE_TO_TERMS				: Resource.msg('bml.termserror', 'forms', null),
		CHAR_LIMIT_MSG					: Resource.msg('forms.character.limit', 'forms', null),
		CONFIRM_DELETE					: Resource.msg('forms.confirm.delete', 'forms', null),
		TITLE_GIFTREGISTRY				: Resource.msg('forms.title.giftregistry', 'forms', null),
		TITLE_ADDRESS					: Resource.msg('forms.title.address', 'forms', null),
		TITLE_CREDITCARD				: Resource.msg('forms.title.creditcard', 'forms', null),
		SERVER_CONNECTION_ERROR 		: Resource.msg('global.serverconnection','locale','Server connection failed!'),
		IN_STOCK_DATE				: Resource.msg('global.inStockDate', 'locale', null)
	};
	
	// additional resources 
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_IN_STOCK] = Resource.msg('global.instock','locale',null);
	resources["QTY_" + ProductAvailabilityModel.AVAILABILITY_STATUS_IN_STOCK] = Resource.msg('global.quantityinstock','locale',null);
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER] = Resource.msg('global.allpreorder','locale',null);
	resources["QTY_" + ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER] = Resource.msg('global.quantitypreorder','locale',null);
	resources["REMAIN_" + ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER] = Resource.msg('global.remainingpreorder','locale',null);
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER] = Resource.msg('global.allbackorder','locale',null);
	resources["QTY_" + ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER] = Resource.msg('global.quantitybackorder','locale',null);
	resources["REMAIN_" + ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER] = Resource.msg('global.remainingbackorder','locale',null);
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_NOT_AVAILABLE] = Resource.msg('global.allnotavailable','locale',null);
	resources["REMAIN_" + ProductAvailabilityModel.AVAILABILITY_STATUS_NOT_AVAILABLE] = Resource.msg('global.remainingnotavailable','locale',null);
			
	// application urls
	var urls =  {
		appResources				: URLUtils.url('Resources-Load').toString(),
		pageInclude					: URLUtils.url('Page-Include').toString(),
		continueUrl 				: request.isHttpSecure() ? URLUtils.httpsContinue().toString() : URLUtils.httpContinue().toString(),
		staticPath					: URLUtils.staticURL("/").toString(),
		addGiftCert					: URLUtils.url('GiftCert-Purchase').toString(),		
		minicartGC					: URLUtils.url('GiftCert-ShowMiniCart').toString(),		
		addProduct					: URLUtils.url('Cart-AddProduct').toString(),		
		minicart					: URLUtils.url('Cart-MiniAddProduct').toString(),
		cartShow 					: URLUtils.url('Cart-Show').toString(),
		giftRegAdd					: URLUtils.https('Address-GetAddressDetails', 'addressID', '').toString(),
		paymentsList				: URLUtils.https('PaymentInstruments-List').toString(),
		addressesList				: URLUtils.https('Address-List').toString(),
		wishlistAddress				: URLUtils.https('Wishlist-SetShippingAddress').toString(),
		deleteAddress				: URLUtils.url('Address-Delete').toString(),
		getProductUrl 				: URLUtils.url('Product-Show').toString(),
		getBonusProducts			: URLUtils.url('Product-GetBonusProducts').toString(),
		addBonusProduct				: URLUtils.url('Cart-AddBonusProduct').toString(),	
		getSetItem 					: URLUtils.url('Product-GetSetItem').toString(),
		productDetail 				: URLUtils.url('Product-Detail').toString(),
		getAvailability				: URLUtils.url('Product-GetAvailability').toString(),			
		removeImg 					: URLUtils.staticURL('/images/interface/icon_remove.gif').toString(),
		searchsuggest 				: URLUtils.url('Search-GetSuggestions').toString(),	
		productNav 					: URLUtils.url('Product-Productnav').toString(),	
		summaryRefreshURL			: URLUtils.url('COBilling-UpdateSummary').toString(),
		billingSelectCC				: URLUtils.https('COBilling-SelectCreditCard').toString(),
		updateAddressDetails		: URLUtils.https('COShipping-UpdateAddressDetails').toString(),
		updateAddressDetailsBilling : URLUtils.https('COBilling-UpdateAddressDetails').toString(),	
		shippingMethodsJSON			: URLUtils.https('COShipping-GetApplicableShippingMethodsJSON').toString(),
		shippingMethodsList			: URLUtils.https('COShipping-UpdateShippingMethodList').toString(),
		selectShippingMethodsList	: URLUtils.https('COShipping-SelectShippingMethod').toString(),
		resetPaymentForms 			: URLUtils.url('COBilling-ResetPaymentForms').toString(),
		compareShow					: URLUtils.url('Compare-Show').toString(),
		compareAdd					: URLUtils.url('Compare-AddProduct').toString(),	
		compareRemove				: URLUtils.url('Compare-RemoveProduct').toString(),
		compareEmptyImage			: URLUtils.staticURL('/images/comparewidgetempty.png').toString(),
		giftCardCheckBalance		: URLUtils.https('COBilling-GetGiftCertificateBalance').toString(),
		addCoupon					: URLUtils.https('Cart-AddCoupon').toString(),	
		powerReviewsFullJs			: URLUtils.staticURL(URLUtils.CONTEXT_CATALOG, null, '/pwr/engine/js/full.js').toString(),
		powerReviewsZip				: URLUtils.staticURL(URLUtils.CONTEXT_CATALOG, null, '').toString()
	};
	
	var isMobileUserAgent = isMobile();
</isscript>
(function(app){
	app.isMobileUserAgent = ${isMobileUserAgent};
	app.zoomViewerEnabled = ${!isMobileUserAgent};	
	app.constants = <isprint value="${JSON.stringify(constants)}" encoding="off"/>;
	app.resources = <isprint value="${JSON.stringify(resources)}" encoding="off"/>;	
	app.urls = <isprint value="${JSON.stringify(urls)}" encoding="off"/>;	
}(window.app = window.app || {}));