<iscache type="relative" hour="24" varyby="price_promotion"/>
<iscomment>
	This template renders a product in the search result using a ProductSearchHit object.
</iscomment>

<isif condition="${!empty(pdict.Product) }">

	<iscomment>Set the product of the product search hit locally for reuse</iscomment>
	<isset name="Product" value="${pdict.Product}" scope="page"/>
	<isset name="OrgProduct" value="${null}" scope="page"/>
	
	<iscomment>
		Get the colors selectable from the current product master or variant range if we
		need to determine them based on a search result.
	</iscomment>
	<isscript>
		var selectableColors : dw.util.Collection = new dw.util.ArrayList();
		var varAttrColor : dw.catalog.ProductVariationAttribute = null;
		
		if( Product.master )
		{
			var varModel : dw.catalog.ProductVariationModel = Product.variationModel;
			varAttrColor = varModel.getProductVariationAttribute("color");
	
			if( varAttrColor != null )
			{
				selectableColors = Product.variationModel.getFilteredValues( varAttrColor );
				
			}
		}
		
		var firstProduct : dw.catalog.Product = pdict.FirstProduct;
		if( firstProduct && firstProduct.variant && varAttrColor != null )
		{
			selectedColor = firstProduct.variationModel.getSelectedValue( varAttrColor );
		}
	</isscript>

    <iscomment>
		Generate link to product detail page: by default it's just the product of the product search hit.
		If a color variation is available, the first color is used as link URL.
	</iscomment>
	<isset name="firstColorVariation" value="${null}" scope="page"/>
	<isset name="productUrl" value="${URLUtils.http('Product-Show', 'pid', Product.ID)}" scope="page"/>
	<isif condition="${!empty(selectableColors) && selectableColors.size() > 0 && !empty(varAttrColor)}">
		
		<iscomment>if we have a selected color, this color is highlighted otherwise the first selectable color is hightlighted</iscomment>
		<isif condition="${!empty(selectedColor)}">
			<isset name="firstColorVariation" value="${selectedColor}" scope="page"/>
		<iselse/>
			<isset name="firstColorVariation" value="${selectableColors.get(0)}" scope="page"/>
		</isif>
		<isif condition="${!empty(varAttrColor)}">
			<isset name="productUrl" value="${pdict.Product.variationModel.url('Product-Show', varAttrColor, firstColorVariation)}" scope="page"/>
		</isif>
		
	</isif>

    <iscomment>append the paging parameters to the product URL</iscomment>
	<iscomment><isset name="productUrl" value="${productUrl.append('start', pdict.CurrentHttpParameterMap.starting.stringValue)}" scope="page"/></iscomment>

	<iscomment>append the search query parameters to the product URL</iscomment>
	<isif condition="${!empty(pdict.ProductSearchResult)}">
		<isset name="productUrl" value="${productUrl}" scope="page"/>
	</isif>

<div class="product-tile" id="${Product.UUID}" data-itemid="${Product.ID}">


<iscomment>Image</iscomment>
<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>

<div class="product-image"><!-- dwMarker="product" dwContentID="${Product.UUID}" -->

	<iscomment>Render the thumbnail</iscomment>
	
		<iscomment>Determine the correct image, either first displayed color variation or default product thumbnail</iscomment>
		<isif condition="${!empty(selectableColors) && selectableColors.size() > 0}">
			<isif condition="${!empty(selectedColor)}">
				<isset name="firstColorVariation" value="${selectedColor}" scope="page"/>
			<iselse>
				<isset name="firstColorVariation" value="${selectableColors.get(0)}" scope="page"/>
			</isif>
			<isset name="image" value="${firstColorVariation.getImage('medium')}" scope="page"/>
			
			
		<iselse/>
			<isset name="image" value="${Product.getImage('medium',0)}" scope="page"/>
		</isif>
		
		<iscomment>If image couldn't be determined, display a "no image" medium</iscomment>
		<isif condition="${!empty(image)}">
			<isset name="thumbnailUrl" value="${image.getURL()}" scope="page"/>
			<isset name="thumbnailAlt" value="${image.alt}" scope="page"/>
			<isset name="thumbnailTitle" value="${image.title}" scope="page"/>
		<iselse/>
			<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagemedium.png')}" scope="page"/>
			<isset name="thumbnailAlt" value="${Product.name}" scope="page"/>
			<isset name="thumbnailTitle" value="${Product.name}" scope="page"/>
		</isif>

		<a class="thumb-link" href="${productUrl}" title="${Product.name}">
			<img src="${thumbnailUrl}" alt="${thumbnailAlt}" title="${thumbnailTitle}" />
		</a>
	
</div>
	
<iscomment>Product Name</iscomment>
<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>

<div class="product-name">
	<h2>
		<a class="name-link" href="${productUrl}" title="${Product.name}">
			<isprint value="${Product.name}"/>
		</a>
	</h2>
</div>
	
<iscomment>Pricing</iscomment>
<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>

<div class="product-pricing">

	<iscomment>Renders pricing information depending on the option or variation model, as well as scaled prices and so on.</iscomment>
		
	<isif condition="${Product.productSet}">
		<iscomment>Product set pricing</iscomment>
		<span class="product-set-price">${Resource.msg('global.buyall','locale',null)}</span>
		
	<iselseif condition="${Product.master && pdict.CurrentHttpParameterMap.pricerange.stringValue == 'true'}"/>
		<iscomment>Product master price range depending on the represented variants</iscomment>	
		<span class="product-sales-price">$<isprint value="${pdict.CurrentHttpParameterMap.minprice.stringValue}"/> - $<isprint value="${pdict.CurrentHttpParameterMap.maxprice.stringValue}"/></span>
	<iselse/>						
		<iscomment>For Product master without a price range get the pricing from firstRepresentedProduct </iscomment>
		<isif condition="${Product.master && pdict.CurrentHttpParameterMap.pricerange.stringValue != 'true'}"/>
			<iscomment>Preserve current product instance</iscomment>
			<isset name="OrgProduct" value="${Product}" scope="page"/>
			<isset name="Product" value="${pdict.FirstProduct}" scope="page"/>
		</isif>
		<iscomment>
			Regular pricing through price model of the product. If the product is an option product,
			we have to initialize the product price model with the option model.
		</iscomment>
		<isif condition="${Product.optionProduct}">
			<isset name="PriceModel" value="${Product.getPriceModel(Product.getOptionModel())}" scope="page"/>
		<iselse/>
			<isset name="PriceModel" value="${Product.getPriceModel()}" scope="page"/>
		</isif>

		<iscomment>
			Check whether the product has price in the sale pricebook. If so, then
			display two prices: crossed-out standard price and sales price.
		</iscomment>
		<isinclude template="product/components/standardprice"/>
		<isset name="SalesPrice" value="${PriceModel.getPrice()}" scope="page"/>
		<isset name="ShowStandardPrice" value="${StandardPrice.available && SalesPrice.available && StandardPrice.compareTo(SalesPrice) == 1}" scope="page"/>

		<isif condition="${ShowStandardPrice}">
			<div class="product-discounted-price">
				<span class="product-standard-price" title="Regular Price"><isprint value="${StandardPrice}"/></span>
				<span class="product-sales-price" title="Sale Price"><isprint value="${SalesPrice}"/></span>
			</div>
		<iselse/>
			<span class="product-sales-price" title="Sale Price"><isprint value="${SalesPrice}"/></span>
		</isif>
		
		<isif condition="${!empty(OrgProduct)}">
			<iscomment>Restore current product instance</iscomment>
			<isset name="Product" value="${OrgProduct}" scope="page"/>
			<isset name="OrgProduct" value="${null}" scope="page"/>
		</isif>
	</isif>
		
</div>
	

<iscomment>Promotion</iscomment>
<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>

<iscomment>Render information on active product promotions</iscomment>
<isset name="promos" value="${dw.campaign.PromotionMgr.activeCustomerPromotions.getProductPromotions(Product)}" scope="page"/>
<isif condition="${!empty(promos)}">
	<div class="product-promo">
		<isloop items="${promos}" var="promo" status="promoloopstate">
			<div class="promotional-message <isif condition="${promoloopstate.first}"> first <iselseif condition="${promoloopstate.last}"> last</isif>">
				<isprint value="${promo.calloutMsg}" encoding="off"/>
			</div>
		</isloop>
	</div>
</isif>
	
	
<iscomment>Compare</iscomment>
<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
	
<iscomment>
	Render the compare checkbox, if search result is based on a category context.
	The checkbox is displayed if either the category or one of its parent categories
	has the custom attribute "enableCompare" set to true.
</iscomment>
<isscript>importScript("product/ProductUtils.ds")</isscript>
<isif condition="${!empty(pdict.CurrentHttpParameterMap.cgid.value) && ProductUtils.isCompareEnabled(pdict.CurrentHttpParameterMap.cgid.value)}">
       <div class="product-compare">        	
		<isif condition="${!Product.productSet && !Product.bundle}">
			<isscript>
				// mark the compare checkbox checked if the current product is 
				// in the current comparison list for the current category
				
				importScript( "catalog/libCompareList.ds" );
				importScript( "common/libJson.ds" );

				var comparison = GetProductCompareList();
				// Set the category
				if(!empty(pdict.ProductSearchResult && !empty(pdict.ProductSearchResult.category) ))
					comparison.setCategory(pdict.ProductSearchResult.category.ID);

				var comparisonProducts = null;
				
				if (comparison) {
					comparisonProducts = comparison.getProducts();
				}
				
				var checkedStr = '';
				
				if (!empty(comparisonProducts)) {								
					var pIt = comparisonProducts.iterator();
					var productId = null;
					
					while (pIt.hasNext()) {
						productId = pIt.next();									
						if (productId == Product.ID) {
							checkedStr = 'checked=true';
							break;
						}
					}
				}		    				
   			</isscript>			
			<input type="checkbox" class="compare-check" id="${'cc-'+Product.UUID}" ${checkedStr}/>				
			<label for="${'cc-'+Product.UUID}">Compare</label>				
		</isif>
	</div>

</isif>

<iscomment>Reviews</iscomment>
<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>

<isif condition="${!Product.productSet}">	
	<isinclude template="product/components/reviewsmini"/>
</isif>
    
 
 <iscomment>Swatches</iscomment>
<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>

<iscomment>
	Render the color swatch secion for a product search hit. The swatches depend on the products the search hit actually represents.
	Doesn't necessarily equal all variants of a product master, since only a sub set of variants could be represented by the search
	hit (a variant group). We show color swatches only for variant groups represented by a product search hit.
</iscomment>
<isif condition="${!empty(selectableColors) && selectableColors.size() > 1 && !empty(varAttrColor)}">

	<div class="product-swatches">

		<iscomment>render a link to the palette and hide the actual palette if there are more than five colors contained</iscomment>
		<isif condition="${selectableColors.size() > 5}">
			<a class="product-swatches-all">${Resource.msg('productresultarea.viewallcolors','search',null)}</a> (<isprint value="${selectableColors.size()}"/>)
		</isif>

		<iscomment>render the palette, the first swatch is always preselected</iscomment>
		<ul class="swatch-list<isif condition="${selectableColors.size() > 5}"> swatch-toggle</isif>">	

			<isloop items="${selectableColors}" var="colorValue" status="varloop">

				<iscomment>Determine the swatch and the thumbnail for this color</iscomment>
				<isset name="colorSwatch" value="${colorValue.getImage('swatch')}" scope="page"/>
				<isset name="colorThumbnail" value="${colorValue.getImage('medium')}" scope="page"/>

				<iscomment>If images couldn't be determined, display a "no image" thumbnail</iscomment>
				<isif condition="${!empty(colorSwatch)}">
					<isset name="swatchUrl" value="${colorSwatch.getURL()}" scope="page"/>
					<isset name="swatchAlt" value="${colorSwatch.alt}" scope="page"/>
					<isset name="swatchTitle" value="${colorSwatch.title}" scope="page"/>
				<iselse/>
					<isset name="swatchUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
					<isset name="swatchAlt" value="${colorValue.displayValue}" scope="page"/>
					<isset name="swatchTitle" value="${colorValue.displayValue}" scope="page"/>
				</isif>
				<isif condition="${!empty(colorThumbnail)}">
					<isset name="thumbnailUrl" value="${colorThumbnail.getURL()}" scope="page"/>
					<isset name="thumbnailAlt" value="${colorThumbnail.alt}" scope="page"/>
					<isset name="thumbnailTitle" value="${colorThumbnail.title}" scope="page"/>
				<iselse/>
					<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
					<isset name="thumbnailAlt" value="${colorValue.displayValue}" scope="page"/>
					<isset name="thumbnailTitle" value="${colorValue.displayValue}" scope="page"/>
				</isif>
				
				<isif condition="${!empty(selectedColor)}">
					<isset name="preselectCurrentSwatch" value="${colorValue.value == selectedColor.value}" scope="page"/>
				<iselse>
					<isset name="preselectCurrentSwatch" value="${varloop.first}" scope="page"/>
				</isif>
				
				<iscomment>build the proper URL and append the search query parameters</iscomment>
			    <isset name="swatchproductUrl" value="${Product.variationModel.url('Product-Show', varAttrColor, colorValue.value)}" scope="page"/>
			    <isif condition="${!empty(pdict.ProductSearchResult)}">
				    <isset name="swatchproductUrl" value="${pdict.ProductSearchResult.url( swatchproductUrl )}" scope="page"/>
			    </isif>

				<iscomment>render a single swatch, the url to the proper product detail page is contained in the href of the swatch link</iscomment>
				<li>
					<a href="${swatchproductUrl}" class="swatch ${(preselectCurrentSwatch) ? 'selected' : ''}" title="<isprint value="${colorValue.displayValue}"/>">
						<img src="${swatchUrl}" alt="${swatchAlt}" title="${swatchTitle}" data-thumb='{"src":"${thumbnailUrl}","alt":"${thumbnailAlt}","title":"${thumbnailTitle}"}'/>
					</a>
				</li>

			</isloop>

		</ul>
		
	</div>
			
</isif>
	
</div><!--  END: .product-tile -->
	
</isif>